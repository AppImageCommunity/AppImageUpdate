name: CI

on: [push, pull_request]

jobs:
  appimage-build:
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x86_64, i386]

    name: AppImage ${{ matrix.ARCH }}
    runs-on: ubuntu-latest
    env:
      ARCH: ${{ matrix.ARCH }}
      DIST: bionic
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build AppImage in Docker
        run: bash -ex ci/build-in-docker.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: AppImage build ${{ matrix.ARCH }}
          path: |
            AppImageUpdate*.AppImage*
            appimageupdatetool*.AppImage*

  upload:
    name: Create release and upload artifacts
    needs:
      - appimage-build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
          WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
          WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage **/AppImageUpdate*.AppImage* **/appimageupdatetool*.AppImage*
